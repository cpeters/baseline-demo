apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "2"
  name: update-manifest
  namespace: dev-php-helloworld
spec:
  params:
    - name: gitRepositoryUrl
      description: URL of the Git repository to update
      type: string
    - name: gitRepositoryRevision
      default: main
      description: Branch or Tag to push the update to
      type: string
    - name: gitPath
      description: Path in the repository to work in.
      type: string
    - name: fileName
      description: Name of the file to be updated
      type: string
    - name: image
      description: The image to be written into the YAML
      type: string
    - name: imageTag
      description: The image tag to be written into the YAML
      type: string
    - name: verbose
      default: 'true'
      description: Log the commands used during execution
      type: string
  steps:
    - image: 'alpine/git:v2.26.2'
      name: git-checkout
      resources: {}
      script: |
        #!/usr/bin/env sh

        set -eu -o pipefail

        if [[ "\$(params.verbose)" == "true" ]] ; then
          set -x
          echo "**** Cloning \$(params.gitRepositoryUrl) into \$(pwd)/repository"
        fi

        echo $(params.gitRepositoryUrl)

        git clone $(params.gitRepositoryUrl) $(pwd)/repository

        cd repository

        git checkout $(params.gitRepositoryRevision)
      volumeMounts:
        - mountPath: /workspace/repository
          name: repository
      workingDir: /workspace
    - image: 'alpine/git:v2.26.2'
      name: update-yaml
      resources: {}
      script: >
        #!/usr/bin/env sh

        set -e

        if [[ "\$(params.verbose)" == "true" ]] ; then
          echo "**** Updating \$(params.fileName) image to \$(params.image):\$(params.imageTag)"
        fi

        pwd

        sed -i
        's+$(params.image)\:[[:graph:]]*+$(params.image):$(params.imageTag)+g'
        repository/\$(params.gitPath)/\$(params.fileName)
      volumeMounts:
        - mountPath: /workspace/repository
          name: repository
      workingDir: /workspace
    - image: 'alpine/git:v2.26.2'
      name: commit-push-changes
      resources: {}
      script: >
        #!/usr/bin/env sh

        set -e

        git config --global user.email "tekton@tekton.dev"

        git config --global user.name "OpenShift Pipeline"

        git add .

        git commit --allow-empty -m "[OpenShift Pipeline] Updating
        $(params.fileName) image to $(params.image):$(params.imageTag)"

        git push origin $(params.gitRepositoryRevision)
      volumeMounts:
        - mountPath: /workspace/repository
          name: repository
      workingDir: /workspace/repository
  volumes:
    - emptyDir: {}
      name: repository
